/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
import DAO.ConnectDAO;
import DAO.ReaderDAO;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Tuan Dung
 */
public class Addmember extends javax.swing.JInternalFrame {

    /**
     * Creates new form Addmember
     */
    public Addmember() {
        initComponents();
        LoadListReader();
    }
    
    public void ShowDulieuMember(){
        try {
            tbMember.removeAll();
            String[] arr = {"Mã ĐG", "Tên ĐG", "Email", "SĐT"};
            DefaultTableModel model = new DefaultTableModel(arr, 0);
            
            Connection connection = ConnectDAO.getSQLServerConnection();
            
            String query = "SELECT * FROM DBO.DOCGIA";
            PreparedStatement ps = connection.prepareStatement(query);
            
            ResultSet rs =  ps.executeQuery();
            
            while (rs.next()){
                Vector vector = new Vector();
                vector.add(rs.getString("MADOCGIA"));
                vector.add(rs.getString("TENDOCGIA"));
                vector.add(rs.getString("EMAIL"));
                vector.add(rs.getString("SODIENTHOAI"));
                model.addRow(vector);
            }
            ConnectDAO.closeConnection(connection);
            tbMember.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(Addmember.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LoadListReader(){
        String sql = "SELECT MADOCGIA as [Mã độc giả], TENDOCGIA as [Tên độc giả], EMAIL as [Email] , SODIENTHOAI as [Số điện thoại]  FROM DOCGIA ORDER BY MADOCGIA asc";
        ReaderDAO.LoadData(sql, tbMember);
        autoId();
        ProcessCtr(false);
        this.btnAddMember.setEnabled(true);
    }
    
    public static PreparedStatement pst = null;
    public static ResultSet rs = null;
    public static Connection conn = ConnectDAO.getSQLServerConnection();
    
    private void autoId()
    {
        try {
             String sql="SELECT MADOCGIA FROM DOCGIA ORDER BY MADOCGIA DESC";
         
            pst=(PreparedStatement) conn.prepareStatement(sql);
            rs=pst.executeQuery();
           if(rs.next())
           {
                String rnno=rs.getString("MADOCGIA");
                int co=rnno.length();
               String txt= rnno.substring(0, 2);
               String num=rnno.substring(2, co);
               int n=Integer.parseInt(num);
               n++;
               String snum=Integer.toString(n);
               String ftxt=txt+snum;
               txtMemberID.setText(ftxt);
            
           }
           else
           {
               txtMemberID.setText("MI1000");
           }
           
                            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMember = new javax.swing.JTable();
        txtSearchReader = new javax.swing.JTextField();
        btnSearchReader = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnAddMember = new javax.swing.JButton();
        btnDeleteMember = new javax.swing.JButton();
        btnUpdateMember = new javax.swing.JButton();
        btnClearMem = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMemberID = new javax.swing.JTextField();
        txtMemberName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMemberEmail = new javax.swing.JTextField();
        txtMemBerSDT = new javax.swing.JTextField();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(1012, 533));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 48)); // NOI18N
        jLabel1.setText("Độc giả");

        tbMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMemberMouseClicked(evt);
            }
        });
        tbMember.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tbMemberComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(tbMember);

        btnSearchReader.setText("Tìm kiếm");
        btnSearchReader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchReaderActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnAddMember.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/new.png"))); // NOI18N
        btnAddMember.setText("Thêm");
        btnAddMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMemberActionPerformed(evt);
            }
        });

        btnDeleteMember.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Delete.png"))); // NOI18N
        btnDeleteMember.setText("Xóa");
        btnDeleteMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMemberActionPerformed(evt);
            }
        });

        btnUpdateMember.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Reset.png"))); // NOI18N
        btnUpdateMember.setText("Sửa");
        btnUpdateMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMemberActionPerformed(evt);
            }
        });

        btnClearMem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Clear-icon.png"))); // NOI18N
        btnClearMem.setText("Clear");
        btnClearMem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearMemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddMember, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteMember, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateMember, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearMem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddMember, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteMember, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdateMember, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnClearMem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Mã độc giả");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Tên độc giả");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Email");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Số điện thoại");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtMemberName, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMemberEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addComponent(txtMemBerSDT))
                .addGap(42, 42, 42))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtMemberEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMemberName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtMemBerSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtSearchReader)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearchReader, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearchReader, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearchReader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        
        LoadListReader();
    }//GEN-LAST:event_formComponentShown

    private void clearFild(){
      txtMemberID.setText("");
      txtMemberName.setText("");      
      txtMemberEmail.setText("");
      txtMemBerSDT.setText("");  
      txtSearchReader.setText("");  
    }
    
    private boolean CheckTrungMADOCGIA()
    {
             try {
            Connection connection = ConnectDAO.getSQLServerConnection();
            
            String query = "SELECT * FROM DBO.DOCGIA WHERE MADOCGIA = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, txtMemberID.getText());
            
            ResultSet rs =  ps.executeQuery();
            
            while (rs.next()){
                return true;
            }
            ConnectDAO.closeConnection(connection);
        } catch (SQLException ex) {
            Logger.getLogger(Addmember.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    
     public void ProcessCtr(boolean b){
        this.btnAddMember.setEnabled(b);
        this.btnDeleteMember.setEnabled(b);
        this.btnUpdateMember.setEnabled(b);
    }
    
    private void btnAddMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMemberActionPerformed
        if (txtMemberID.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Mã độc giả không được rỗng");
            txtMemberID.requestFocus();
            return;
        }
        else if (txtMemberName.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Tên độc giả không được rỗng");
             txtMemberName.requestFocus();
             return;
        }
        else if (txtMemberEmail.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Email không được rỗng");
             txtMemberEmail.requestFocus();
             return;
        }
        else if (txtMemBerSDT.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Số điện thoại không được rỗng");
             txtMemBerSDT.requestFocus();
             return;
        }
        if (CheckTrungMADOCGIA() == true){
            JOptionPane.showMessageDialog(null, "Mã độc giả đã tồn tại!");
            txtMemberID.requestFocus();
            return;
        }
        else{
            ReaderDAO.InsertReader(this.txtMemberID.getText().trim(), this.txtMemberName.getText().trim(), this.txtMemberEmail.getText().trim(), this.txtMemBerSDT.getText().trim());
            clearFild();
            LoadListReader();                   
        }
    }//GEN-LAST:event_btnAddMemberActionPerformed
/*
    private void btnDeleteMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMemberActionPerformed
        
        int  result = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa!");
        if (result == 0){
        int position = tbMember.getSelectedRow();
        
        String data = tbMember.getModel().getValueAt(position, 1).toString();
        
         try {
                Connection connection = ConnectDAO.getSQLServerConnection();
                
                String query = "DELETE FROM dbo.DOCGIA WHERE MADOCGIA = ?";
                PreparedStatement ps = connection.prepareStatement(query);
                
                ps.setString(1, data);               
                
                ps.executeUpdate();
               
                JOptionPane.showMessageDialog(rootPane, "Xóa thành công!");
                ShowDulieuMember();
                ConnectDAO.closeConnection(connection);
                
            } catch (SQLException ex) {
               
               ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnDeleteMemberActionPerformed
*/
    
    private void btnDeleteMemberActionPerformed(java.awt.event.ActionEvent evt) {                                          
       if (this.txtMemberID.getText().length() == 0)
           JOptionPane.showMessageDialog(null, "Bạn cần chọn độc giả để xóa!");
       else
       {
           if (JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn xóa sách " +this.txtMemberName.getText()+ " hay không", "Thông báo", 2) == 0 )
               ReaderDAO.DeleteReader(this.txtMemberID.getText());
           LoadListReader();
           clearFild();
       }    
    }    
    
    private void tbMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMemberMouseClicked
        ProcessCtr(true);
        this.btnAddMember.setEnabled(false);
        DefaultTableModel tmodel = (DefaultTableModel)tbMember.getModel();
        int selectrowindex = tbMember.getSelectedRow();
        
        txtMemberID.setText(tmodel.getValueAt(selectrowindex, 0).toString());
        txtMemberName.setText(tmodel.getValueAt(selectrowindex, 1).toString());
        txtMemberEmail.setText(tmodel.getValueAt(selectrowindex, 2).toString());
        txtMemBerSDT.setText(tmodel.getValueAt(selectrowindex, 3).toString());       
              
    }//GEN-LAST:event_tbMemberMouseClicked

    private void btnUpdateMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMemberActionPerformed
       
        if (txtMemberID.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Mã sách không được rỗng");
            txtMemberID.requestFocus();
            return;
        }
        else if (txtMemberName.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Loại sách không được rỗng");
             txtMemberName.requestFocus();
             return;
        }
        else if (txtMemberEmail.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Tên không được rỗng");
             txtMemberEmail.requestFocus();
             return;
             }
        else if (txtMemBerSDT.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Tác giả không được rỗng");
             txtMemBerSDT.requestFocus();
             return;
             }     
        else{
            ReaderDAO.UpdateReader(this.txtMemberID.getText().trim(), this.txtMemberName.getText().trim(), this.txtMemberEmail.getText().trim(), this.txtMemBerSDT.getText().trim());
            LoadListReader();
            clearFild();           
        }
    }//GEN-LAST:event_btnUpdateMemberActionPerformed

    private void tbMemberComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tbMemberComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_tbMemberComponentShown

    private void btnClearMemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearMemActionPerformed
        clearFild();
        LoadListReader();
    }//GEN-LAST:event_btnClearMemActionPerformed

    private void btnSearchReaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchReaderActionPerformed
          if (this.txtSearchReader.getText().length() == 0)
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập từ khóa cần tìm", "Thông báo", 1);
        else
        {
            String sql1 = "select * from dbo.DOCGIA where MADOCGIA like N'%"+this.txtSearchReader.getText()+"%' or TENDOCGIA like N'%"+this.txtSearchReader.getText()+"%' or EMAIL like N'%"+this.txtSearchReader.getText()+"%' or SODIENTHOAI like N'%"+this.txtSearchReader.getText()+"%'"; // TENSACH like N'%"+this.txtSearchBook.getText()+"%' or TACGIA like N'%"+this.txtSearchBook.getText()+"%' or  NXB = like N'%"+this.txtSearchBook.getText()+"%' or TRANGTHAI like N'%"+this.txtSearchBook.getText()+"%'";
            ReaderDAO.LoadData(sql1, tbMember);
        }
    }//GEN-LAST:event_btnSearchReaderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMember;
    private javax.swing.JButton btnClearMem;
    private javax.swing.JButton btnDeleteMember;
    private javax.swing.JButton btnSearchReader;
    private javax.swing.JButton btnUpdateMember;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbMember;
    private javax.swing.JTextField txtMemBerSDT;
    private javax.swing.JTextField txtMemberEmail;
    private javax.swing.JTextField txtMemberID;
    private javax.swing.JTextField txtMemberName;
    private javax.swing.JTextField txtSearchReader;
    // End of variables declaration//GEN-END:variables
}
